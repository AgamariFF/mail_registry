const API_BASE_URL = '/mail';
let currentSection = 'outgoing';

function sleep(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
}

async function loadLetters() {
    try {
        const response = await fetch(`${API_BASE_URL}/${currentSection}`);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        const letters = await response.json();
        renderLetters(letters);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∏—Å–µ–º:', error);
        showError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Å—å–º–∞');
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–æ–≤
document.querySelectorAll('.switch-btn').forEach(button => {
    button.addEventListener('click', () => {
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å "active" —É –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
        document.querySelectorAll('.switch-btn').forEach(btn => btn.classList.remove('active'));

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å "active" –∫ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–µ
        button.classList.add('active');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª
        currentSection = button.dataset.section;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–∞–∑–¥–µ–ª–∞
        document.getElementById('currentSection').textContent =
            currentSection === 'outgoing' ? '–ò—Å—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞' : '–í—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞';

        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Ç–∞–±–ª–∏—Ü
        document.getElementById('outgoingTable').style.display = 
            currentSection === 'outgoing' ? 'block' : 'none';
        document.getElementById('incomingTable').style.display = 
            currentSection === 'incoming' ? 'block' : 'none';

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∏—Å—å–º–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
        loadLetters();
    });
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–∏—Å–µ–º –≤ —Ç–∞–±–ª–∏—Ü–µ
function renderLetters(letters) {
    if (currentSection === 'outgoing') {
        renderOutgoingLetters(letters);
    } else {
        renderIncomingLetters(letters);
    }
}

function renderOutgoingLetters(letters) {
    const tbody = document.getElementById('outgoingLettersTable');
    
    if (!letters || letters.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7">
                    <div class="empty-state">
                        <div>üì≠</div>
                        <h3>–ò—Å—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
                    </div>
                </td>
            </tr>
        `;
        return;
    }

    tbody.innerHTML = letters.map(letter => `
        <tr>
            <td><strong>${letter.outgoing_number}</strong></td>
            <td>${formatDate(letter.registration_date)}</td>
            <td>${letter.recipient}</td>
            <td title="${letter.subject}">${truncateText(letter.subject, 50)}</td>
            <td>${letter.executor}</td>
            <td>
                <div class="actions">
                    <button class="btn btn-download" onclick="downloadLetter(${letter.id}, 'outgoing')" ${!letter.file_path ? 'disabled' : ''}>
                        üì• –°–∫–∞—á–∞—Ç—å
                    </button>
                    <button class="btn btn-edit" onclick="editLetter(${letter.id}, 'outgoing')">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç.
                    </button>
                    <button class="btn btn-view" onclick="viewLetter(${letter.id}, 'outgoing')">
                        üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä
                    </button>
                    <button class="btn btn-delete" onclick="deleteLetter(${letter.id}, 'outgoing')">
                        üóë –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </td>
        </tr>
    `).join('');
}

// –†–µ–Ω–¥–µ—Ä –≤—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º
function renderIncomingLetters(letters) {
    const tbody = document.getElementById('incomingLettersTable');
    
    if (!letters || letters.length === 0) {
        tbody.innerHTML = `
            <tr>
                <td colspan="7">
                    <div class="empty-state">
                        <div>üì≠</div>
                        <h3>–í—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
                    </div>
                </td>
            </tr>
        `;
        return;
    }

    tbody.innerHTML = letters.map(letter => `
        <tr>
            <td><strong>${letter.internal_number}</strong></td>
            <td>${formatDate(letter.registration_date)}</td>
            <td>${letter.sender}</td>
            <td title="${letter.subject}">${truncateText(letter.subject, 50)}</td>
            <td>${letter.registered_by}</td>
            <td>
                <div class="actions">
                    <button class="btn btn-download" onclick="downloadLetter(${letter.id}, 'incoming')" ${!letter.file_path ? 'disabled' : ''}>
                        üì• –°–∫–∞—á–∞—Ç—å
                    </button>
                    <button class="btn btn-edit" onclick="editLetter(${letter.id}, 'incoming')">
                        ‚úèÔ∏è –†–µ–¥–∞–∫—Ç.
                    </button>
                    <button class="btn btn-view" onclick="viewLetter(${letter.id}, 'incoming')">
                        üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä
                    </button>
                    <button class="btn btn-delete" onclick="deleteLetter(${letter.id}, 'incoming')">
                        üóë –£–¥–∞–ª–∏—Ç—å
                    </button>
                </div>
            </td>
        </tr>
    `).join('');
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
async function downloadLetter(id, type) {
    try {
        const response = await fetch(`${API_BASE_URL}/${type}/${id}/download`);
        if (!response.ok) {
            throw new Error('–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.style.display = 'none';
        a.href = url;
        a.download = `letter_${id}.pdf`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª');
    }
}

async function viewLetter(id, type) {
    try {
        const response = await fetch(`${API_BASE_URL}/${type}/${id}`);
        if (!response.ok) {
            throw new Error('–ü–∏—Å—å–º–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        }
        const letter = await response.json();
        
        showLetterDetails(letter, type);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∏—Å—å–º–∞:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞');
    }
}

function showLetterDetails(letter, type) {
    const modal = document.createElement('div');
    modal.className = 'modal';
    
    // –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∏–∫–æ–Ω–∫–æ–π
    const headerIcon = type === 'outgoing' ? 'üì§' : 'üì•';
    const headerText = type === 'outgoing' ? '–ò—Å—Ö–æ–¥—è—â–µ–µ –ø–∏—Å—å–º–æ' : '–í—Ö–æ–¥—è—â–µ–µ –ø–∏—Å—å–º–æ';
    
    let detailsHTML = '';
    
    if (type === 'outgoing') {
        detailsHTML = `
            <div class="detail-row">
                <label>üìã –ò—Å—Ö–æ–¥—è—â–∏–π –Ω–æ–º–µ—Ä:</label>
                <span><strong>${letter.outgoing_number}</strong></span>
            </div>
            <div class="detail-row">
                <label>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                <span>${formatDate(letter.registration_date)}</span>
            </div>
            <div class="detail-row">
                <label>üè¢ –ê–¥—Ä–µ—Å–∞—Ç:</label>
                <span>${letter.recipient}</span>
            </div>
            <div class="detail-row">
                <label>üë§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</label>
                <span>${letter.executor}</span>
            </div>
        `;
    } else {
        detailsHTML = `
            <div class="detail-row">
                <label>üìã –í—Ö–æ–¥—è—â–∏–π –Ω–æ–º–µ—Ä:</label>
                <span><strong>${letter.internal_number}</strong></span>
            </div>
            <div class="detail-row">
                <label>üî¢ –í–Ω–µ—à–Ω–∏–π –Ω–æ–º–µ—Ä:</label>
                <span>${letter.external_number || '<em>–ù–µ —É–∫–∞–∑–∞–Ω</em>'}</span>
            </div>
            <div class="detail-row">
                <label>üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:</label>
                <span>${formatDate(letter.registration_date)}</span>
            </div>
            <div class="detail-row">
                <label>üì® –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</label>
                <span>${letter.sender}</span>
            </div>
            <div class="detail-row">
                <label>üè¢ –ê–¥—Ä–µ—Å–∞—Ç:</label>
                <span>${letter.addressee}</span>
            </div>
            <div class="detail-row">
                <label>üë§ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª:</label>
                <span>${letter.registered_by}</span>
            </div>
        `;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ
    detailsHTML += `
        <div class="detail-row">
            <label>üìù –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</label>
            <span style="white-space: pre-wrap;">${letter.subject}</span>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (letter.file_path) {
        const fileName = letter.file_path.split('/').pop();
        detailsHTML += `
            <div class="detail-row">
                <label>üìé –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª:</label>
                <span>${fileName}</span>
            </div>
        `;
    }
    
    modal.innerHTML = `
        <div class="modal-content">
            <div class="modal-header">
                <h2>
                    ${headerIcon} ${headerText}
                    <span class="letter-type-badge">${type === 'outgoing' ? '–ò—Å—Ö–æ–¥—è—â–µ–µ' : '–í—Ö–æ–¥—è—â–µ–µ'}</span>
                </h2>
                <button class="close-btn" onclick="closeModal(this)">&times;</button>
            </div>
            <div class="modal-body">
                ${detailsHTML}
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeModal(modal);
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ ESC
    document.addEventListener('keydown', function escHandler(e) {
        if (e.key === 'Escape') {
            closeModal(modal);
            document.removeEventListener('keydown', escHandler);
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal(element) {
    const modal = element.closest ? element.closest('.modal') : element;
    if (modal && modal.parentElement) {
        modal.style.animation = 'fadeOut 0.3s ease forwards';
        setTimeout(() => {
            if (modal.parentElement) {
                modal.parentElement.removeChild(modal);
            }
        }, 300);
    }
}


function formatDate(dateString) {
    const date = new Date(dateString);
    return date.toLocaleDateString('ru-RU');
}

function truncateText(text, maxLength) {
    if (!text) return '';
    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;
}

function showError(message) {
    alert(message);
}

function editLetter(id, type) {
    alert(`–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ${type === 'outgoing' ? '–∏—Å—Ö–æ–¥—è—â–µ–≥–æ' : '–≤—Ö–æ–¥—è—â–µ–≥–æ'} –ø–∏—Å—å–º–∞ #${id} –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ–∑–∂–µ`);
}

// –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
document.getElementById('searchInput').addEventListener('input', function(e) {
    console.log('–ü–æ–∏—Å–∫:', e.target.value);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞
});

document.getElementById('executorFilter').addEventListener('change', function(e) {
    console.log('–§–∏–ª—å—Ç—Ä:', e.target.value);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    loadLetters();
});

// –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∏—Å—å–º–∞
async function deleteLetter(id, type) {
    const letterType = type === 'outgoing' ? '–∏—Å—Ö–æ–¥—è—â–µ–µ' : '–≤—Ö–æ–¥—è—â–µ–µ';
    
    if (!confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å ${letterType} –ø–∏—Å—å–º–æ #${id}?`)) {
        return;
    }

    try {
        const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {
            method: 'DELETE'
        });

        if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏—Å—å–º–∞');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        showNotification(`${letterType} –ø–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!`, 'success');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∏—Å–µ–º
        await sleep(1000);
        loadLetters();
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏—Å—å–º–∞:', error);
        showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∏—Å—å–º–∞: ' + error.message, 'error');
    }
}

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∏—Å—å–º–∞ (–ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω–∞—è)
async function editLetter(id, type) {
    try {
        console.log(`–ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏—Å—å–º–∞ ${type} #${id} –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...`);
        
        const response = await fetch(`${API_BASE_URL}/${type}/${id}`);
        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`);
        }
        
        const letter = await response.json();
        console.log('–ü–∏—Å—å–º–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', letter);
        
        await openEditModal(letter, type);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∏—Å—å–º–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
        showNotification(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞: ${error.message}`, 'error');
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
async function openEditModal(letter, type) {

    console.log('–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –ø–∏—Å—å–º–∞:', letter);
    debugFileIssue(letter);
    return new Promise((resolve) => {
        setTimeout(() => {
            try {
                const modal = document.getElementById('editModal');
                const form = document.getElementById('editForm');
                
                if (!modal || !form) {
                    throw new Error('–≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
                }

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
                form.reset();
                
                // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ hidden –ø–æ–ª—è
                const oldRemoveFlag = document.getElementById('removeFileFlag');
                if (oldRemoveFlag) {
                    oldRemoveFlag.remove();
                }

                // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è
                document.getElementById('editId').value = letter.id || '';
                document.getElementById('editType').value = type || '';
                
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                document.getElementById('editModalTitle').textContent = 
                    `–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ${type === 'outgoing' ? '–∏—Å—Ö–æ–¥—è—â–µ–≥–æ' : '–≤—Ö–æ–¥—è—â–µ–≥–æ'} –ø–∏—Å—å–º–∞`;
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è
                const outgoingFields = document.getElementById('outgoingFields');
                const incomingFields = document.getElementById('incomingFields');
                
                if (outgoingFields && incomingFields) {
                    outgoingFields.style.display = type === 'outgoing' ? 'block' : 'none';
                    incomingFields.style.display = type === 'incoming' ? 'block' : 'none';
                }
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ–±—â–∏–µ –ø–æ–ª—è
                document.getElementById('editSubject').value = letter.subject || '';
                
                // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è input[type="date"]
                if (letter.registration_date) {
                    const date = new Date(letter.registration_date);
                    if (!isNaN(date.getTime())) {
                        const formattedDate = date.toISOString().split('T')[0];
                        document.getElementById('editRegistrationDate').value = formattedDate;
                    }
                }
                
                // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –ø–∏—Å—å–º–∞
                if (type === 'outgoing') {
                    document.getElementById('editOutgoingNumber').value = letter.outgoing_number || '';
                    document.getElementById('editRecipient').value = letter.recipient || '';
                    document.getElementById('editExecutor').value = letter.executor || '';
                } else {
                    document.getElementById('editInternalNumber').value = letter.internal_number || '';
                    document.getElementById('editExternalNumber').value = letter.external_number || '';
                    document.getElementById('editSender').value = letter.sender || '';
                    document.getElementById('editAddressee').value = letter.addressee || '';
                    document.getElementById('editRegisteredBy').value = letter.registered_by || '';
                }
                
                // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
                const fileInfo = document.getElementById('currentFileInfo');
                const currentFileName = document.getElementById('currentFileName');
                
                if (fileInfo && currentFileName) {
                    if (letter.file_path && letter.file_path !== 'null' && letter.file_path !== '') {
                        const fileName = letter.file_path.split('/').pop() || letter.file_path;
                        currentFileName.textContent = fileName;
                        fileInfo.style.display = 'block';
                        
                        // –°–æ–∑–¥–∞–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞
                        const removeFlag = document.createElement('input');
                        removeFlag.type = 'hidden';
                        removeFlag.id = 'removeFileFlag';
                        removeFlag.name = 'remove_file';
                        removeFlag.value = 'false';
                        form.appendChild(removeFlag);
                    } else {
                        fileInfo.style.display = 'none';
                    }
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                modal.style.display = 'flex';
                modal.style.animation = 'modalAppear 0.3s ease forwards';
                
                // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
                modal.addEventListener('click', handleModalClick);
                document.addEventListener('keydown', handleEscapeKey);
                
                resolve();
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', error);
                showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${error.message}`, 'error');
                reject(error);
            }
        }, 10);
    });
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
function closeEditModal() {
    const modal = document.getElementById('editModal');
    if (modal) {
        modal.style.animation = 'fadeOut 0.3s ease forwards';
        setTimeout(() => {
            modal.style.display = 'none';
            modal.style.animation = '';
            
            // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
            modal.removeEventListener('click', handleModalClick);
            document.removeEventListener('keydown', handleEscapeKey);
        }, 300);
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function handleModalClick(e) {
    const modal = document.getElementById('editModal');
    if (e.target === modal) {
        closeEditModal();
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à–∏ Escape
function handleEscapeKey(e) {
    if (e.key === 'Escape') {
        closeEditModal();
    }
}

// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
function removeFile() {
    const fileInfo = document.getElementById('currentFileInfo');
    const removeFlag = document.getElementById('removeFileFlag');
    
    if (fileInfo) {
        fileInfo.style.display = 'none';
    }
    
    if (removeFlag) {
        removeFlag.value = 'true';
    }
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    const fileInput = document.getElementById('editFile');
    if (fileInput) {
        fileInput.value = '';
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è)
document.getElementById('editForm').addEventListener('submit', async function(e) {
    console.log('–ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–∞–∂–∞—Ç–∞')

    e.preventDefault();
    
    const id = document.getElementById('editId').value;
    const type = document.getElementById('editType').value;
    
    if (!id || !type) {
        showNotification('–û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω ID –∏–ª–∏ —Ç–∏–ø –ø–∏—Å—å–º–∞', 'error');
        return;
    }
    
    const formData = new FormData(this);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    const removeFlag = document.getElementById('removeFileFlag');
    if (removeFlag && removeFlag.value === 'true') {
        formData.append('remove_file', 'true');
    }
    
    try {
        console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–∏—Å—å–º–∞ ${type} #${id}...`);
        
        const response = await fetch(`${API_BASE_URL}/${type}/${id}`, {
            method: 'PUT',
            body: formData
        });

        if (!response.ok) {
            const errorText = await response.text();
            throw new Error(errorText || `HTTP error! status: ${response.status}`);
        }

        const result = await response.json();
        console.log('–ü–∏—Å—å–º–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', result);
        
        showNotification('–ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!', 'success');
        closeEditModal();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∏—Å–µ–º
        setTimeout(() => {
            loadLetters();
        }, 500);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∏—Å—å–º–∞:', error);
        showNotification(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∏—Å—å–º–∞: ${error.message}`, 'error');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å —Ñ–∞–π–ª–∞–º–∏
function debugFileIssue(letter) {
    console.log('=== –î–ï–ë–ê–ì –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –§–ê–ô–õ–ï ===');
    console.log('file_path:', letter.file_path);
    console.log('file_path —Ç–∏–ø:', typeof letter.file_path);
    console.log('file_path —Ä–∞–≤–Ω–æ null:', letter.file_path === null);
    console.log('file_path —Ä–∞–≤–Ω–æ "null":', letter.file_path === 'null');
    console.log('file_path –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞:', letter.file_path === '');
    console.log('file_path undefined:', letter.file_path === undefined);
    console.log('–ï—Å—Ç—å —Ñ–∞–π–ª?:', letter.file_path && letter.file_path !== 'null' && letter.file_path !== '');
    console.log('================================');
}   

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'info') {
    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.innerHTML = `
        <div class="notification-content">
            <span class="notification-icon">
                ${type === 'success' ? '‚úÖ' : type === 'error' ? '‚ùå' : '‚ÑπÔ∏è'}
            </span>
            <span class="notification-message">${message}</span>
            <button class="notification-close" onclick="this.parentElement.parentElement.remove()">&times;</button>
        </div>
    `;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (notification.parentElement) {
            notification.remove();
        }
    }, 5000);
}
